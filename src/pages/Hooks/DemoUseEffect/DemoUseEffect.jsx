import React, { useEffect, useState } from 'react';

// Nh·ªØng bi·∫øn kh√¥ng g√°n l·∫°i gi√° tr·ªã ban ƒë·∫ßu khi render  l·∫°i UI th√¨ ƒë·∫∑t b√™n ngo√†i func
let arrLocation = [
    {
        id: 'HCM',
        tenTP: 'H·ªì Ch√≠ Minh',
        danhSachQH: [
            { id: 'Q001', name: 'Qu·∫≠n 1' },
            { id: 'Q002', name: 'Qu·∫≠n 2' },
            { id: 'Q003', name: 'Qu·∫≠n 3' },
        ]
    },
    {
        id: 'DN',
        tenTP: 'ƒê√† N·∫µng',
        danhSachQH: [
            { id: 'HC', name: 'H·∫£i Ch√¢u' },
            { id: 'LC', name: 'Li√™n Chi·ªÉu' },
            { id: 'ST', name: 'S∆°n Tr√†' },
        ]
    }
]

let timeout = {}

// Khi render l·∫°i UI => t·∫°o l·∫°i function =>Nh·ªØng bi·∫øn trong fc ƒë∆∞·ª£c t·∫°o l·∫°i
const DemoUseEffect = () => {
    // !Updating ch·∫°y khi => state, props thay ƒë·ªïi
    let [number, setNumber] = useState(0)
    let [arrQH, setQH] = useState([])
    let [idTP, setTP] = useState('')
    // call API , g·ªçi c√°c th∆∞ vi·ªán slick ,countUp => sau khi UI render
    // ComponentDidMount,componentDidUpdate(ClassComponent)
    // Hook =>UseEffect(Function): ƒê·∫°i di·ªán cho nhi·ªÅu medthod c·ªßa lifeCyle

    // useEffect(() => {
    //     console.log('componentDidmount');
    //     console.log('componentDidUpdate');
    //     //! kh√¥ng n√™n g·ªçi setState ·ªü componentDidmount v√† componentDidUpdate
    // })
    // Ch·ªâ ch·∫°y ri√™ng componentDidmount
    //! useEffect(H√†m x·ª≠ l√Ω theo lifeCycle,m·∫£ng)
    useEffect(() => {
        console.log('componentDidmount');
    }, [])

    // unmount
    useEffect(() => {
        // setInterval tr·∫£ v·ªÅ obj
        timeout = setInterval(() => {
            console.log('call API')
        }, 1000);
        return () => {
            // Th·ª±c hi·ªán c√°c code khi rw·ªùi kh·ªèi ho·∫∑c x√≥a  component kh·ªèi UI
            clearInterval(timeout)
        }
    }, [])

    // Updating
    useEffect(() => {
        // Sau khi UI render l·∫°i xong khi ch·ªçn setTP
        //th√¨ idTP ƒë√£ ƒëc x√©t xong
        getArrQH();
    }, [idTP]) // CH·ªà CH·∫†Y KHI IDTP ƒë·ªïi

    let renderQH = () => {
        if (arrQH.length == 0) return <option >H√£y ch·ªçn th√†nh ph·ªë tr∆∞·ªõc </option>
        return arrQH.map((QH => {
            console.log(QH)
            return (
                <option key={QH.id} value={QH.id}>{QH.name} </option>
            )
        }))
    }

    let getArrQH = () => {
        if (idTP !== '') {
            // c√≥ ch·ªçn th√†nh ph·ªë
            let tpTK = arrLocation.find(tp => tp.id === idTP)
            let newArrQH = tpTK.danhSachQH
            setQH(newArrQH)
        }
    }

    // 2 Dropdown: danh s√°ch th√†nh ph·ªë, danh s√°ch qu·∫≠n huy·ªán theo th√†nh ph·ªë
    // khi ch·ªçn th√†nh ph·ªë: => t·ª± ƒë·ªông hi·ªÉn th·ªã danh s√°ch qu·∫≠n huy·ªán t∆∞∆°ng ·ª©ng


    console.log(arrQH)
    console.log(idTP)
    return (
        <div className='container'>
            <p className='alert alert-success'>{number}</p>
            <button onClick={() => {
                setNumber(number + 1)
            }} className='btn btn-info'>TƒÉng Number</button>

            <h2>Demo ch·ªçn th√†nh ph·ªë</h2>
            <div className='w-50'>
                <div className="row">
                    <div className="col-6">
                        {/* City */}
                        <select className="form-control" onChange={(e) => {
                            let { value } = e.target;
                            // console.log('PhongThanh üöÄ ~> value', value)
                            setTP(value)

                        }} id="">
                            <option value={''}>Ch·ªçn th√†nh ph·ªë</option>
                            <option value={'HCM'}>H·ªì Ch√≠ Minh</option>
                            <option value={'DN'}>ƒê√† N·∫µng</option>
                        </select>
                    </div>
                    <div className="col-6">
                        {/* Qu·∫≠n huy·ªán */}
                        <select className="form-control" id="">
                            {renderQH()}
                        </select>
                    </div>
                </div>
            </div>

        </div>
    );
}

// ClassComponent => thu·ªôc t√≠nh(·ªü ph∆∞∆°ng th·ª©c contrucstor) ƒë∆∞·ª£c khai b√°o trong class=> th√¨ s·∫Ω k b·ªã ·∫£nh h∆∞·ªüng khi render UI
// KHI RENDER L·∫†I Ui => ch·ªâ c√≥ ph∆∞∆°ng th·ª©c render ƒë∆∞·ª£c g·ªçi l·∫°i

export default DemoUseEffect;
